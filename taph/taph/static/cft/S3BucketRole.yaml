# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
AWSTemplateFormatVersion: "2010-09-09"

Description: |
  This template creates an AWS IAM Role, an S3 bucket, and SNS topic.
  The Role allows the ProTOD AWS account to access put files in the created s3 bucket.
  The S3 bucket is used by ProTOD to put the output of a tool.
  The SNS topic is used to alert the user when a file is written to the S3 bucket.
Parameters:
  pRoleExternalId:
    Description: |
      Best practices is to use a unique string GUID using uuidgen.
      Allowed characters are: upper and lower case, numbers, and the dash "-".
      This string should be generated by the owner of the target account and provided the consultant.
    Type: String
    MinLength: "10"
    MaxLength: "256"
    AllowedPattern: "^[a-zA-Z0-9-]*$"
  pRoleExpirationDate:
    Description: |
      Change the default to a future date. This is the day in which the scanning account
      will no longer have access to the target account and it is expressed as YYYY-MM-DD
    Type: String
    Default: "2020-01-31"
    MinLength: "10"
    MaxLength: "10"
    AllowedPattern: "^[0-9]{4}-[0-9]{2}-[0-9]{2}]*$"
  pAuthorizedARN:
    Description: |
      This is the AWS account that will perform the scan. Do not change.
    Type: String
    Default: "123456789012"
    AllowedValues:
      - "123456789012"
  pNotificationEmailAddress:
    Type: String
    MaxLength: "128"
    Description: |
      Email of individual to be notified when the  output is available.
      Make sure to check you email and click the link to subscribe to the SNS topic.

Resources:
  NotificationSNSTopic:
  # Check: CKV_AWS_26: "Ensure all data stored in the SNS topic is encrypted"
  # checkov:skip=CKV_AWS_26:No sensitive information in the SNS topic.
    Type: AWS::SNS::Topic
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W47
            reason: "No sensitive information in the SNS topic."

  MySNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref pNotificationEmailAddress
      TopicArn: !Ref NotificationSNSTopic

  NotificationSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Sid: AllowBucketAccess
          Principal:
            Service: "s3.amazonaws.com"
          Effect: Allow
          Action:
          - SNS:Publish
          Resource: !Ref NotificationSNSTopic
      Topics:
      - !Ref NotificationSNSTopic

  # S3 Bucket
  S3Bucket:
  # Check: CKV_AWS_21: "Ensure the S3 bucket has versioning enabled"
  # checkov:skip=CKV_AWS_21:External Bucket files are designed to be ephemeral
  # Check: CKV_AWS_18: "Ensure the S3 bucket has access logging enabled"
  # checkov:skip=CKV_AWS_18:External AWS account owner responsibility.
    Type: AWS::S3::Bucket
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W35
            reason: "External AWS account owner responsibility."
    Properties:
      AccessControl: Private
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        TopicConfigurations:
          - Topic: !Ref NotificationSNSTopic
            Event: 's3:ObjectCreated:*'
      LifecycleConfiguration:
        Rules:
          - Id: Rule to expire all objects after 90 days
            Status: Enabled
            ExpirationInDays: 90
      Tags:
        - Key: Name
          Value: ProTOD Output S3 Bucket

  # S3 Bucket Policy to enforce Transport Encryption
  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: "s3:*"
            Effect: Deny
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
              - !Sub "arn:aws:s3:::${S3Bucket}"
            Principal: "*"
            Condition:
              Bool:
                "aws:SecureTransport": false

  S3BucketRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub ${pAuthorizedARN}
            Action: "sts:AssumeRole"
            Condition:
              DateLessThan:
                "aws:CurrentTime": !Ref pRoleExpirationDate
              StringEquals:
                "sts:ExternalId": !Ref pRoleExternalId
      MaxSessionDuration: 43200
      Policies:
        - PolicyName: S3BucketPutObject
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
      Tags:
        - Key: Name
          Value: S3 Access Role

# The output is shown only if pCreateS3Bucket is true
Outputs:
  S3Bucket:
    Description: S3 Bucket for output files
    Value: !Ref S3Bucket
  SNSTopic:
    Description: NotificationSNSTopic
    Value: !Ref NotificationSNSTopic
  S3BucketRole:
    Description: S3BucketRole
    Value: !Ref S3BucketRole
