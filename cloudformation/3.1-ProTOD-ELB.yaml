# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys the frontend ALB
Parameters:
  pProTODCertificate:
    Type: String
    Description: The TLS Certificate for the HTTPS Listener

Resources:
  FrontEndALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      LoadBalancerAttributes:
      - Key: access_logs.s3.enabled
        Value: true
      - Key: access_logs.s3.bucket
        Value: !ImportValue ProTODS3LogBucket
      - Key: routing.http.drop_invalid_header_fields.enabled
        Value: true
      Scheme: internet-facing
      SecurityGroups:
      - !Ref FrontEndALBSG
      Subnets:
      - !ImportValue ProTODFrontEndPublicSubnetAZ1
      - !ImportValue ProTODFrontEndPublicSubnetAZ2
      Type: application

  FrontEndALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: 8080
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      IpAddressType: ipv4
      Port: 8080
      Protocol: HTTP
      ProtocolVersion: HTTP1
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue ProTODFrontEndVPC

  FrontEndALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn: !Ref pProTODCertificate
      DefaultActions:
      - Order: 1
        Type: authenticate-cognito
        AuthenticateCognitoConfig:
          OnUnauthenticatedRequest: authenticate
          UserPoolArn: !ImportValue CognitoUserPoolArn
          UserPoolClientId: !ImportValue CognitoAppClientID
          UserPoolDomain: !ImportValue CognitoDomain
      - Order: 2
        Type: forward
        TargetGroupArn: !Ref FrontEndALBTargetGroup
      LoadBalancerArn: !Ref FrontEndALB
      Port: 443
      Protocol: HTTPS
      # Check: CKV_AWS_103: "Ensure that Load Balancer Listener is using at least TLS v1.2"
      # checkov:skip=CKV_AWS_103:This is a false positive. Listener uses TLS 1.3 and 1.2
      SslPolicy: ELBSecurityPolicy-TLS13-1-2-Ext1-2021-06

  FrontEndALBSG:
    Type: AWS::EC2::SecurityGroup
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W2
            reason: "ELB needs to receive connections from the internet."
          - id: W5
            reason: "ELB needs to make connections for health checks and to cognito."
          - id: W9
            reason: "ELB needs to make connections for health checks and to cognito."
    Properties:
      GroupDescription: FrontEndALB SG
      SecurityGroupEgress:
      - Description: ELB health checks
        IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: !ImportValue ProTODCIDRFrontEndVPC
      - Description: ELB to Cognito
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
      - Description: Internet Facing ELB
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      VpcId: !ImportValue ProTODFrontEndVPC

Outputs:
  FrontEndALB:
    Description: FrontEndALB
    Value: !Ref FrontEndALB
    Export:
      Name: "FrontEndALB"
  FrontEndALBTargetGroup:
    Description: FrontEndALBTargetGroup
    Value: !Ref FrontEndALBTargetGroup
    Export:
      Name: "FrontEndALBTargetGroup"
  FrontEndALBSG:
    Description: FrontEndALBSG
    Value: !Ref FrontEndALBSG
    Export:
      Name: "FrontEndALBSG"
  FrontEndALBURL:
    Description: FrontEndALBURL
    Value: !GetAtt FrontEndALB.DNSName
    Export:
      Name: "FrontEndALBURL"
